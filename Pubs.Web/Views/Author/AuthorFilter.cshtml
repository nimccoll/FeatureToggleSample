<!--
//===============================================================================
// Microsoft Premier Support for Developers
// FeatureToggle Sample
//===============================================================================
// Copyright © Microsoft Corporation.  All rights reserved.
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY
// OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT
// LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
// FITNESS FOR A PARTICULAR PURPOSE.
//===============================================================================
-->
@model Pubs.Web.ViewModels.AuthorFilterViewModel

@{
    ViewBag.Title = "AuthorFilter";
}

<link rel="stylesheet" type="text/css" href="~/Content/themes/base/all.css" />
<link rel="stylesheet" type="text/css" href="~/Content/themes/base/bootstrap-multiselect.css" />

<div class="well well-sm">
    <h2>Find Authors</h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-12">
            <label for="ddlPublishers">Publishers:</label>
            <div class="btn-group" role="group">
                <select id="ddlPublishers" name="ddlPublishers" multiple="multiple" class="multiPublisher">
                    @foreach (Pubs.Data.Models.Publisher publisher in Model.Publishers)
                    {
                        <option value="@publisher.PublisherID">@publisher.Name</option>
                    }
                </select>
                <button id="btnSearchTitles" class="btn btn-default" type="button"><i class="glyphicon glyphicon-search"></i></button>
            </div>
        </div>
    </div>
    
    <br/>
    
    <div class="row">
        <div class="col-md-12" id="divTitles">
        </div>
    </div>
}

<br />

<div class="table-responsive">
    <table class="table table-bordered table-condensed table-striped">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Authors[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Authors[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Authors[0].HasContract)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Authors[0].YearToDateSales)
            </th>
            <th>
                Titles
            </th>
        </tr>

        @for (int i = 0; i < Model.Authors.Count; i++)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => model.Authors[i].Name)
                </td>
                <td>
                    <address>
                        @Html.DisplayFor(model => model.Authors[i].Address)<br />
                        @Html.DisplayFor(model => model.Authors[i].City), @Html.DisplayFor(model => model.Authors[i].State) @Html.DisplayFor(model => model.Authors[i].PostalCode)<br />
                        Phone: @Html.DisplayFor(model => model.Authors[i].PhoneNumber)
                    </address>
                </td>
                <td>
                    @Html.DisplayFor(model => model.Authors[i].HasContract)
                </td>
                <td>
                    @Model.Authors[i].YearToDateSales.ToString("n0")
                </td>
                <td nowrap="nowrap">
                    @if (Model.Authors[i].Titles.Count > 0)
                    {
                        var titles = Model.Authors[i].Titles.ToList();
                        if (Model.Authors[i].Titles.Count > 4)
                        {
                            string titleList = string.Empty;
                            foreach (Pubs.Data.Models.Title title in titles)
                            {
                                titleList = titleList + string.Format("{0}<br/>", title.BookTitle);
                            }
                            <button class="btn btn-default btn-sm" data-content="@titleList" data-html="true" data-toggle="popover" data-trigger="focus" title="Titles">...</button>
                        }
                        else
                        {
                            foreach (Pubs.Data.Models.Title title in titles)
                            {
                                Write(title.BookTitle);
                                <br />
                            }
                        }
                    }
                </td>
            </tr>
        }
    </table>
</div>

@section Scripts {
    <script src="~/Scripts/jquery-ui-1.11.2.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap-multiselect.js" type="text/javascript"></script>
    <script language="javascript" type="text/javascript">
        // Initialize application after all scripts are ready
        $(document).ready(function ($) {
            $('[data-toggle="popover"]').popover(); // Enable popover
            $('.multiPublisher').multiselect({
                numberDisplayed: 2
            }); // Enable multi-select
            $('#btnSearchTitles').on('click', function (event) {
                var publishers = $('#ddlPublishers').val();
                $.ajax({
                    url: '/title/listbypublisherid/',
                    data: { 'publishers': publishers },
                    type: 'GET',
                    traditional: true,
                    cache: false,
                    success: function (data) {
                        $('#divTitles').html(data);
                        $('.multiTitle').multiselect({
                            numberDisplayed: 2
                        }); // Enable multi-select
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log('error', textStatus, errorThrown);
                    }
                });
            });
        });
    </script>
}
